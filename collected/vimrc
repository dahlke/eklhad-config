set nocompatible              " be iMproved, required
filetype off                  " required

" set the runtime path to include Vundle and initialize
set rtp+=~/.vim/bundle/Vundle.vim
call vundle#begin()

"------- Bundles ------"
Plugin 'mileszs/ack.vim'
Plugin 'kien/ctrlp.vim'
Plugin 'Raimondi/delimitMate'
Plugin 'fholgado/minibufexpl.vim'
Plugin 'tomasr/molokai'
Plugin 'scrooloose/nerdtree'
Plugin 'Lokaltog/powerline'
Plugin 'scrooloose/syntastic'
Plugin 'marijnh/tern_for_vim'
Plugin 'bling/vim-airline'
Plugin 'altercation/vim-colors-solarized'
Plugin 'Lokaltog/vim-easymotion'
Plugin 'airblade/vim-gitgutter'
Plugin 'nathanaelkane/vim-indent-guides'
Plugin 'pangloss/vim-javascript'
Plugin 'mxw/vim-jsx'
Plugin 'groenewege/vim-less'
Plugin 'terryma/vim-multiple-cursors'
Plugin 'airblade/vim-rooter'
Plugin 'derekwyatt/vim-scala'
Plugin 'tpope/vim-surround'
Plugin 'gmarik/vundle'

" two awesome color schemes

call vundle#end()            " required
filetype plugin indent on    " required

"------  Color Options -----"
syntax enable
"let g:solarized_termcolors=256
set background=dark
colorscheme solarized



"------  Visual Options  ------"

syntax enable                       " enable syntax highlighting
set number                          " enable line numbers
set nowrap                          " disable word wrap
set vb                              " visual bell
set showmatch                       " show matching bracket

set laststatus=2                    " always use a status line




"------  Behavior  ------"

set backspace=indent,eol,start      " normal backspace behavior
set history=1000                    " 1000 item history
set undolevels=1000                 " 1000 item undo buffer
let mapleader=","                   " set leader to '
set title                           " update the terminals title
set tabstop=4                       " tab = 4 spaces
set shiftwidth=4                    " indent to 4 spaces
set softtabstop=4                   " Number of spaces that a <Tab> counts for
set expandtab                       " use spaces instead of tabs
set autoindent                      " auto indent
set smartindent                     " use vim smart indenting
set cursorline                      " show the line the cursor is on
set clipboard=unnamed               " copy to the system clipboard
" set backupdir=~/tmp                 " store all temp files in the tmp folder
" set mouse=a                       " use the mouse

" Ignore these files when completing names
set wildignore+=.svn,CVS,.git,*.o,*.a,*.class,*.mo
set wildignore+=*.la,*.so,*.obj,*.swp,*.jpg,*.png,*.xpm,*.gif
set wildignore+=*/tmp/*,*.zip,*.pyc
set iskeyword+=_,$,@,%,#

set wildmode=longest,list           " Shell style tab completion

filetype indent on
filetype plugin on

set encoding=utf-8

"------  Searching  ------"
set incsearch                       " Search while typing
set ignorecase                      " Case insensitive searching
set smartcase                       " lowercase = case insensitive, any uppercase = case sensitive
set hlsearch                        " highlight all search results


set grepprg=grep\ -nH\ $*           " set grep to always display a file name

"------  Buffers  ------"

" change buffers using <Leader>{[,]}
nmap <silent> \[ :bp<CR>
nmap <silent> \] :bn<CR>

" jump to last/alternate buffer
noremap <Leader><Leader> :tabl<CR>

" switch between unsaved buffers w/o needing to save
set hidden

"------  Windows  ------"

" Move easily between windows
noremap <C-J> <C-W>j
noremap <C-K> <C-W>k
noremap <C-H> <C-W>h
noremap <C-L> <C-W>l

" Keybindings for splitting windows
noremap <Leader>V :split<CR>
noremap <Leader>v :vsplit<CR>

"------  Text Width Stuff  ------"

set tw=72
set fo-=c
set fo-=t
set modeline
set modelines=3
set sr
set whichwrap=h,l,~,[,]

"------  Helpful keybindings  ------"

" ,T = Delete all Trailing space in file
map <Leader>T :%s/\s\+$//<CR>

" ,R = Converts tabs to spaces in document
map <Leader>R :retab<CR>

"I make the mistake of typing W and Q instead of w and q
nmap :W :w
nmap :Q :q

"------  Vim Powerline ------"
set rtp+=~/.vim/bundle/powerline/powerline/bindings/vim

"------  NERDTree Options  ------"
let NERDTreeIgnore=['\.git$', '\.pyc$']
map <leader>a :NERDTreeToggle<C-M>
" Open NERDTree on Vim open
" autocmd vimenter * NERDTree

"------  Ctrl-p  ------"
let g:ctrlp_working_path_mode = 'ra'
let g:ctrlp_extensions = ['mixed']
let g:ctrlp_mruf_relative = 1
let g:ctrlp_mruf_case_sensitive = 0
let g:ctrlp_map = '<c-p>'
let g:ctrlp_cmd = 'CtrlP'

"------  Vim-JSX  ------"
" Allow JSX in normal JS file
let g:jsx_ext_required = 0

"------  GitGutter  ------"
highlight clear SignColumn

"------  MiniBufExpl  ------"
let g:miniBufExplUseSingleClick = 1

"------  Syntastic  ------"
let g:syntastic_mode_map = {
    \ 'mode': 'active',
    \ 'active_filetypes': ['python', 'javascript', 'scss']
    \}

let g:syntastic_always_populate_loc_list=1
let g:syntastic_check_on_open=1
let g:syntastic_check_on_wq=0

let g:syntastic_python_checkers=['flake8']
let g:syntastic_python_flake8_args = '--ignore="E121,E128,E201,E202,E221,E222,E241,E302,E4,E5"'

" requires installing jshint
let g:syntastic_javascript_checkers=['eslint']

"------ MultiCursors ------"
let g:multi_cursor_exit_from_insert_mode=0

"------  Ack  ------"
nmap <c-g> :Ack
let g:ackprg = 'ag --nogroup --column'

" following line clears the search highlights when pressing <Leader>s
nnoremap <Leader>s :nohlsearch<CR>

"------ Find and Replace File ------"
nmap <c-s> :%s

"----- Remove Trailing Whitespace On Save -----"
autocmd BufWritePre * :%s/\s\+$//e

"------ Tab for Autocomplete ------"
function! Tab_Or_Complete()
    if col('.')>1 && strpart( getline('.'), col('.')-2, 3 ) =~ '^\w'
        return "\<C-N>"
    else
        return "\<Tab>"
    endif
endfunction
:inoremap <Tab> <C-R>=Tab_Or_Complete()<CR>

"----- Because VIM and Crontab hate each other -----"
autocmd filetype crontab setlocal nobackup nowritebackup

